{"remainingRequest":"/Users/tonglinghui/www/muji/node_modules/babel-loader/lib/index.js!/Users/tonglinghui/www/muji/src/router.js","dependencies":[{"path":"/Users/tonglinghui/www/muji/src/router.js","mtime":1541680688811},{"path":"/Users/tonglinghui/www/muji/node_modules/cache-loader/dist/cjs.js","mtime":1540897775507},{"path":"/Users/tonglinghui/www/muji/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\nimport Search from './views/Search';\nimport classIfy from './views/classify';\nimport { isLogin } from \"./assets/js/app\";\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home\n  }, {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/About.vue');\n    }\n  }, {\n    path: '/search',\n    name: 'search',\n    component: Search\n  }, {\n    path: '/classify',\n    name: '/classify',\n    component: classIfy\n  }, {\n    path: '/person-msg',\n    name: 'person-msg',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/person-msg');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/shopcar',\n    name: 'shopcar',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/shopcar');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/person-center',\n    name: 'person-center',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/person-center');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/login',\n    name: 'login',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/login');\n    }\n  }, {\n    path: '/registered',\n    name: 'registered',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/registered');\n    }\n  }, {\n    path: '/protocol',\n    name: 'protocol',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/protocol');\n    }\n  }, {\n    path: '/person-center/setting',\n    name: 'setting',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/person-set');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/person-center/setting/admin_address',\n    name: 'admin_address',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/admin-address');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/person-center/set/admin_address/add_address',\n    name: 'add_address',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/add-address');\n    },\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/item_details',\n    name: 'item_details',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/item-details');\n    }\n  }, {\n    path: '/item_back',\n    name: 'item_back',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/person-setting');\n    }\n  }, {\n    path: '/set-address/:id',\n    name: 'set-address',\n    props: true,\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/set-address');\n    }\n  }, {\n    path: '/catecory',\n    name: 'catecory',\n    props: true,\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: function component() {\n      return import(\n      /* webpackChunkName: \"about\" */\n      './views/set-address');\n    }\n  }]\n}); //配置全局路由守卫\n\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    //检查requiresAuth是否\n    // this route requires auth, check if logged in\n    // if not, redirect to login page.\n    if (!isLogin()) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next(); // 确保一定要调用 next()\n  }\n});\nexport default router;",{"version":3,"sources":["/Users/tonglinghui/www/muji/src/router.js"],"names":["Vue","Router","Home","Search","classIfy","isLogin","use","router","mode","base","process","env","BASE_URL","routes","path","name","component","meta","requiresAuth","props","beforeEach","to","from","next","matched","some","record","query","redirect","fullPath"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\nimport Search from './views/Search'\nimport classIfy from './views/classify'\nimport {isLogin} from \"./assets/js/app\";\n\nVue.use(Router)\n\n\nlet router = new Router({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes: [\n        {\n            path: '/',\n            name: 'home',\n            component: Home\n        },\n        {\n            path: '/about',\n            name: 'about',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/About.vue')\n        }, {\n            path: '/search',\n            name: 'search',\n            component: Search\n        }, {\n            path: '/classify',\n            name: '/classify',\n            component: classIfy\n        },\n        {\n            path: '/person-msg',\n            name: 'person-msg',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/person-msg'),\n            meta: {requiresAuth: true}\n        },\n        {\n            path: '/shopcar',\n            name: 'shopcar',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/shopcar'),\n            meta: { requiresAuth: true }\n        },\n        {\n            path: '/person-center',\n            name: 'person-center',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/person-center'),\n            meta: { requiresAuth: true }\n        },\n        {\n            path: '/login',\n            name: 'login',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/login')\n        }\n        ,\n        {\n            path: '/registered',\n            name: 'registered',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/registered')\n        }\n        ,\n        {\n            path: '/protocol',\n            name: 'protocol',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/protocol')\n        },\n        {\n            path: '/person-center/setting',\n            name: 'setting',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/person-set'),\n            meta: { requiresAuth: true }\n        },\n        {\n            path: '/person-center/setting/admin_address',\n            name: 'admin_address',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/admin-address'),\n            meta: { requiresAuth: true }\n        },\n        {\n            path: '/person-center/set/admin_address/add_address',\n            name: 'add_address',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/add-address'),\n            meta: { requiresAuth: true }\n        },\n        {\n            path: '/item_details',\n            name: 'item_details',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/item-details'),\n        },\n        {\n            path: '/item_back',\n            name: 'item_back',\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/person-setting'),\n        },\n        {\n            path: '/set-address/:id',\n            name: 'set-address',\n            props: true,\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/set-address'),\n        },\n        {\n            path: '/catecory',\n            name: 'catecory',\n            props: true,\n            // route level code-splitting\n            // this generates a separate chunk (about.[hash].js) for this route\n            // which is lazy-loaded when the route is visited.\n            component: () => import(/* webpackChunkName: \"about\" */ './views/set-address'),\n        }\n    ]\n})\n//配置全局路由守卫\nrouter.beforeEach((to, from, next) => {\n    if (to.matched.some(record => record.meta.requiresAuth)) {//检查requiresAuth是否\n        // this route requires auth, check if logged in\n        // if not, redirect to login page.\n        if (!isLogin()) {\n            next({\n                path: '/login',\n                query: {redirect: to.fullPath}\n            })\n        } else {\n            next()\n        }\n    } else {\n        next() // 确保一定要调用 next()\n    }\n})\nexport default router\n"]}]}